name: Build CI

on: [push]

jobs:

  build-project:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        compiler:
          - cc: gcc-10
            cxx: g++-10
          - cc: clang-11
            cxx: clang++-11
    env:
      CC: ${{ matrix.compiler.cc }}
      CXX: ${{ matrix.compiler.cxx }}
      build_dir: build

    steps:
      - name: Fetch compiler
        run: |
          sudo apt-get install -y ${{ matrix.compiler.cc }}
          sudo apt-get install -y ${{ matrix.compiler.cxx }}
          sudo apt-get install clang-tidy
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Create build directory
        run: mkdir -p ${build_dir}
      - name: Configure project
        run: cd ${build_dir} && cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
      - name: Build project
        run: cmake --build ${build_dir} -- -j$(nproc)
      - name: Run unit tests
        run: cd ${build_dir} && ctest
      - name: Run clang-tidy
        if: matrix.compiler.cc == 'clang-11'
        run: |
          run-clang-tidy \
            -p=build \
            -j$(nproc) \
            -header-filter include/* \
            -export-fixes clang-tidy-fixes.yaml \
            include/CommandParser.h example_main.cpp
      - name: Run clang-tidy-pr-comments action
        uses: platisd/clang-tidy-pr-comments@master
        if: matrix.compiler.cc == 'clang-11'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          clang_tidy_fixes: clang-tidy-fixes.yaml
          request_changes: true
          pull_request_id: ${{ env.pr_id }}
